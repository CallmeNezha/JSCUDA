// Generated by CoffeeScript 1.10.0
(function() {
  var JC, MatrixD, UE, VectorD, exports;

  UE = require("./exception");

  JC = require("./jc/build/Debug/jc.node");

  VectorD = (function() {
    function VectorD(n, elements) {
      if (elements == null) {
        elements = void 0;
      }
      this.elements = void 0;
      this.length = Math.ceil(n);
      if (this.length < 1) {
        throw new UE.UserException("'n' \<uint32\> must greater than zero");
      }
      if (elements instanceof JC.DeviceFloat32Array) {
        if (elements.length !== this.length) {
          throw new UE.UserException("Wrong number of elements when construct VectorD object");
        }
        this.elements = elements;
      } else if (elements instanceof Float32Array) {
        this.elements = new JC.DeviceFloat32Array(this.length);
        this.copyFrom(this.length, elements);
      } else {
        this.elements = new JC.DeviceFloat32Array(this.length);
      }
      if (!(this.elements instanceof JC.DeviceFloat32Array)) {
        throw new UE.UserException("VectorD object construct failed");
      }
    }

    VectorD.prototype.destroy = function() {
      this.elements.destroy();
      return this.length = 0;
    };

    VectorD.prototype.copy = function(v) {
      if (this.length !== v.length) {
        throw new UE.UserException("'v.length' mismatch");
      }
      return this.elements.copy(v.elements, 0, 0, this.length);
    };

    VectorD.prototype.copyFrom = function(n, array) {
      n = Math.ceil(n);
      if (n < 1) {
        throw new UE.UserException("'n' \<uint32\> must  greater than zero");
      }
      if (!(array instanceof Float32Array)) {
        throw new UE.UserException("'array' must be Float32Array");
      }
      if (n > array.length || n > this.elements.length) {
        throw new UE.UserException("'n' exceed range of array");
      }
      return this.elements.copyFrom(array, 0, 0, n);
    };

    VectorD.prototype.copyTo = function(n, array) {
      n = Math.ceil(n);
      if (n < 1) {
        throw new UE.UserException("'n' \<uint32\> must  greater than zero");
      }
      if (!(array instanceof Float32Array)) {
        throw new UE.UserException("'array' must be Float32Array");
      }
      if (n > array.length || n > this.elements.length) {
        throw new UE.UserException("'n' exceed range of array");
      }
      return this.elements.copyTo(array, 0, 0, n);
    };

    VectorD.prototype.add = function(v) {
      if (!(v instanceof VectorD && (v.elements != null))) {
        throw new UE.UserException("'v' must be VectorD");
      }
      if (v.length !== this.length) {
        throw new UE.UserException("'v.length' mismatch");
      }
      return JC.vectorAdd(this, v);
    };

    return VectorD;

  })();

  MatrixD = (function() {
    function MatrixD(m, n, elements) {
      if (elements == null) {
        elements = void 0;
      }
      this.numRow = m;
      this.numCol = n;
      if (elements instanceof JC.DeviceFloat32Array) {
        if (elements.length !== m * n) {
          throw new UE.UserException("wrong number of elements when construct Matrix object");
        }
        this.elements = elements;
      } else {
        this.elements = new Float32Array(m * n);
      }
    }

    return MatrixD;

  })();

  module.exports = JC;

  exports = module.exports;

  exports.VectorD = VectorD;

  exports.MatrixD = MatrixD;

}).call(this);

//# sourceMappingURL=linear.js.map
